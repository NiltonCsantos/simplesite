*{
  margin: 0;
  padding:0;
  box-sizing: border-box;
  font-size: 20px;
  font-family: Arial, Helvetica, sans-serif;

  /* Selecionei todos os itens para ser mais simples de estilazos, pois todos começarão sem bordas e sem margim, sendo assim melhores de serem manipulados. Por padrão tudo começará com a font arial e com tamanho de 2  pixels*/
}


header{
  background-color: #000000;
  display: flex;
  justify-content: space-between;
  align-items: center;
  min-width: 100%;

  /* O header tem o display flex para que os itens fiquem lado a lado e o espaçamento é do tipo between para os itens ficarem equidistantes, o min-width passa a informação para o navegador que o tamanho mínimo do header deve ser 100% na tela */

}

header a{
  text-decoration: none;
  color: #ffffff;
  border: 2px solid #FFFFFF;
  transition: 0.5;
  cursor: pointer;
  padding: 5px;
  border-radius: 10px;

  /* Aqui estou estilizando como os links do header devem ser. A transição serve para quando o usuário passar o cursor do mouse, haver um efeito mais suave */

}

header a:hover{
  border-color: rgb(253, 7, 7);

  /* Aqui estou indicando a cor que deve aparecer quando o usuário passar o cursor do mouse sobre o link */

}

h1{
  font-size: 30px;
  text-align: center;
  width: 100%;
  padding: 40px 0px 10px 0px;

  /* Alinhando o h1 do jeito que quero */

}

.description{
  padding: 10px;
  text-align: center;
  font-size: 30px;
  
  /* Alinhando a descrição abaixo do h1 */

}

ul{
font-size: 20px;
list-style: none;
display: flex;
gap: 15px;
padding: 10px;
align-items: center;
flex-direction: row;

/* Alinhando a ul e estlizando para que tenha efeito de menu */

}

.container{
  min-height: 100vh;
  display: flex;
  flex-direction: column;

  /* Definindo que independente da tela, o tamanho principal da div irá ser 100%. A direção da div principal tem que ser como coluna para que ela não empurre os outros elementos para o lado */

}

.gridContainer{
  display: grid;
  grid-template-columns: 3fr 1fr;
  grid-template-areas: "mainContent sidebarContent";
  padding: 20px;
  flex: 1 0 auto;

  /* O display foi definido como grid e a distribuição da tela ficou 3 espaços para o mainContent e 1 para o sidebarContent, o grid area serviu para indicar isso o <flex 1 0 auto> o número 1 indica que o gridConatiner vai ocupar todo o espaço disponível, o 0 indica que ele não vai mudar de tamanho e o auto indica que o tamanho vai ser automático para ser mais responsivo   */

}

.mainCardImg{
  width: 100%;
  height: 180px;
  border-radius: 10px;

  /* A altura das divs que abrigam as imagens principais teve um tamanho fixo de 180px e a largura de 100%*/

}

.sidebarCardImg{
  width: 100%;
  border-radius: 10px;

  /* A imagens do conteúdo do lado dos principais ficou 100% para ocupar todo o espaço disponível e a altura ficou automática */

}

.categoryCard{
  width:280px;
  height: 380px;
  border: 2px solid transparent ;
  border-radius: 10px;
  transition: 0.5s;
  cursor: pointer;

  /* A classe categoryCard por ser responsável por abrigrar as imagens teve o tamanho de um reângulo definido (um tamanho fixo) para assim poder regular as divs  */

}

.categoryCard:hover{
  border-color: black;
}

.mainContent{
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 20px;
  grid-area: mainContent;

  /* A classe mainContent por ser responsável por abrigar as divs que abrograma imagens no conteúdo principal teve seu display flex e direção de linhas */

}

.mainCategoryCardTitle{
  padding: 6px;
  text-align: center;

  /* Organizando os títulos das imagens principais*/

}

.mainCategoryCardDescription{
  text-align: center;

  /*  Organizando os textos das imagens principais */
}

.sidebarContent{
  background-color: #383838;
  color: white;
  padding: 16px;
  display: flex;
  flex-direction: column;
  align-items: center;
  min-width: 300px;
  grid-area: sidebarContent;
  gap: 20px;

  /* o conteúdo do lado teve seu display flex com orientação em colunas e o tamanho mínimo de 300px */

}

.sidebarCard{
  width: 80%;
  border: 1px solid transparent;
  border-radius: 10px;
  transition: 0.5s;
  cursor: pointer;
  padding: 10px;

  /* O side bar carde teve uma larguraa de 80% para ficar mais responsivo */

}

.sidebarCard:hover{
  border-color: #FFFFFF;
}

.sidebarCardTitle{
  padding: 10px;
  text-align: center;
}

footer{
  min-width: 100%;
  background-color: #000000;
  display: flex;
  justify-content: space-between;
  align-items: center;

  /* Foi usado o display flex para colocar os iten lado a lado */
}

footer a{
  text-decoration: none;
  color: #FFFFFF;
  background-color: transparent;
  transition: 0.5s;
  cursor: pointer;
  border-radius: 10px;
  padding: 2px;

  /* Personalizando os links no footer */

}

footer a:hover{
 background-color: #d47e7e;
}

.redes{
  display: flex;
  align-items: center;
  gap: 15px;
  padding-right: 15px;

  /* Personalizando a div com os links das redes sociais */

}

.anchor{
  padding: 15px;
}


@media(max-width:700px){
  header{
    align-items: center;
    justify-content: center;
    flex-direction: column;
  }

  .gridContainer{
    grid-template-areas: "mainContent"
    "sidebarContent";
    display: flex;
    flex-direction: column;
    align-items: center;

    /* Alterando o display de grid para flex e colocando a direção em colunas */
  }

  
}

@media(max-width:560px){
  footer{
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .sidebarContent{
    min-width: auto;
  }

}

@media(max-width:320px){

  h1{
    font-size: 20px;
    width: 99%;
    text-align: center;
  }

  .description{
    font-size: 20px;
    width: 99%;
  }

  .redes{
    display: flex;
    align-items: center;
    gap: 15px;
    padding-right: 15px;
  
    /* Personalizando a div com os links das redes sociais */
  
  }
  
  .logo{

    width: auto;
  }
 
  ul{
    flex-direction: column;
    }
    .anchor{
      padding: 10px 0px;
    }
}
